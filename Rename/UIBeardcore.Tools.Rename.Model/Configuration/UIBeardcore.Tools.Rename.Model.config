<?xml version="1.0"?>
<!-- This is a bare configuration for a Tridion.Web editor -->
<Configuration xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge"
               xmlns:cfg="http://www.sdltridion.com/2009/GUI/Configuration"
               xmlns:ext="http://www.sdltridion.com/2009/GUI/extensions"
			   xmlns:list="http://www.sdltridion.com/2009/GUI/extensions/List"
               xmlns:cmenu="http://www.sdltridion.com/2009/GUI/extensions/ContextMenu">

	<!--
		The SDL Tridion GUI uses a merging technique to minimize the amount of calls done by the client
		for static files (like .css and .js file).
		The files can be grouped and will be merged per group (if merging is enabled on the group)
		For debugging purposes the merging behavior can be switched off by setting the merge attribute to false.
	-->
	<resources>
		
		<cfg:filters />
		
		<cfg:extensiongroups/>

		<cfg:groups>
			<cfg:group name="UIBeardcore.Tools.Rename.Model" merger="Tridion.Web.UI.Core.Configuration.Resources.DomainModelProcessor" merge="always">

				<!-- The `domainmodel` element is the container for a resource group with a domain model 
					@name Defines the name of the domain model
				-->
				<cfg:domainmodel name="UIBeardcore.Tools.Rename.Model">
					<cfg:itemtypes factory="Tridion.Cme.Model.Factory" idmatch="^bc\:">
						
						<cfg:itemtype id="bc:operations" alias="BEARDCORE_MULTIPLE_OPERATIONS" containedTypes="" name="" implementation="UIBeardcore.Tools.Rename.MultipleOperations"/>
		
					</cfg:itemtypes>
					<cfg:fileset>
						
						<cfg:file type="script">/Client/Constants.js</cfg:file>
						<cfg:file type="script">/Client/ModelFactory.js</cfg:file>
						<cfg:file type="script">/Client/MultipleOperations.js</cfg:file>
						<!-- 
							Constants
						-->
						<!--<cfg:file type="script">/Scripts/Constants.js</cfg:file>-->

						<!-- 
							Content Manager Items extensions: ItemTypes
						-->

						<!--<cfg:file type="script">/Scripts/ContentManagerExtensions/Folder.js</cfg:file>-->

					</cfg:fileset>

					<cfg:services>
						<cfg:service type="wcf">/Services/UIBeardcoreToolsRename.svc</cfg:service>
					</cfg:services>

				</cfg:domainmodel>
				
			</cfg:group>

		</cfg:groups>
		
	</resources>
	
	<definitionfiles/>
	
	<extensions>
		<ext:editorextensions/>
		<ext:dataextenders/>
		
		<ext:modelextensions>
			
			<!-- The `itemtypes` element holds the extensions for existing item types -->
			<cfg:itemtypes>
				
				<!-- The `itemtype` element holds extension information about a single existing item type
					@id The `id` attribute holds the itemtype ID for which this extension is intended
					@implementation The `implementation` attribute holds the javascript class name which will extend an exiting itemtype
				-->
				<!--<cfg:itemtype id="tcm:2" implementation="UIBeardcore.ItemType.ContentManagerExtensions.Folder"/>-->
				
			</cfg:itemtypes>
			
		</ext:modelextensions>
		<ext:resourceextensions/>
	</extensions>

	<commands />
	
	<contextmenus />
	
	<widgetsviews />
	
	<localization />
	
	<settings>
		<customconfiguration />
	</settings>

</Configuration>
