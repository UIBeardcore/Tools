<?xml version="1.0"?>
<!-- This is a bare configuration for a Tridion.Web editor -->
<Configuration xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge"
               xmlns:cfg="http://www.sdltridion.com/2009/GUI/Configuration"
               xmlns:ext="http://www.sdltridion.com/2009/GUI/extensions"
			   xmlns:list="http://www.sdltridion.com/2009/GUI/extensions/List"
               xmlns:cmenu="http://www.sdltridion.com/2009/GUI/extensions/ContextMenu">

	<!--
		The SDL Tridion GUI uses a merging technique to minimize the amount of calls done by the client
		for static files (like .css and .js file).
		The files can be grouped and will be merged per group (if merging is enabled on the group)
		For debugging purposes the merging behavior can be switched off by setting the merge attribute to false.
	-->
	<resources>

		<cfg:filters />

		<cfg:extensiongroups/>
	
		<cfg:groups>

			<cfg:group name="UIBeardcore.Tools.Rename.Commandset" merge="always">
				<cfg:fileset>
					<cfg:file type="script">/Scripts/Commands/Rename.js</cfg:file>
				</cfg:fileset>
				<cfg:dependencies>
					<cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
					<cfg:dependency>Tridion.Web.UI.Editors.CME.commands</cfg:dependency>
				</cfg:dependencies>
			</cfg:group>

			<cfg:group name="UIBeardcore.Tools.Rename.Commands" merge="always">
				<cfg:fileset>
					<cfg:file type="script">/Scripts/Constants.js</cfg:file>
					<!--
					<cfg:file type="script">/Scripts/Command.js</cfg:file>
					-->
					<!-- reference to commandset filegroup -->
					<cfg:file type="reference">UIBeardcore.Tools.Rename.Core</cfg:file>
				</cfg:fileset>
				<cfg:dependencies>
					<!-- Commands are dependend on Tridion.Cme.Command -->
					<cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
					<cfg:dependency>Tridion.Web.UI.Editors.CME.commands</cfg:dependency>
				</cfg:dependencies>
			</cfg:group>

			<cfg:group name="UIBeardcore.Tools.Rename.ContextMenu" merge="always">
				<cfg:fileset>
					<cfg:file type="style">{ThemePath}/Controls/contextmenu.css</cfg:file>
				</cfg:fileset>
				<cfg:dependencies>
					<cfg:dependency>UIBeardcore.Tools.Rename.Commands</cfg:dependency>
				</cfg:dependencies>
			</cfg:group>

			<cfg:group name="UIBeardcore.Tools.Rename.Toolbar" merge="always">
				<cfg:fileset>
					<cfg:file type="style">{ThemePath}/Controls/toolbar.css</cfg:file>
				</cfg:fileset>
				<cfg:dependencies>
					<cfg:dependency>UIBeardcore.Tools.Rename.Commands</cfg:dependency>
				</cfg:dependencies>
			</cfg:group>

			<cfg:group name="UIBeardcore.Tools.Rename.Views.Popups.RenameDialog" merge="always">
				<cfg:fileset>
					<cfg:file type="script">/Views/Popups/RenameDialog.aspx.js</cfg:file>
					<cfg:file type="style">/Views/Popups/RenameDialog.aspx.css</cfg:file>
				</cfg:fileset>
			</cfg:group>

		</cfg:groups>

	</resources>

	<definitionfiles>
		<!-- List definitions -->
	</definitionfiles>

	<!--
		The SDL Tridion GUI allows for additions, manipulations and removal of items within the GUI through
		the 'extension methodology'.

		Below is the configuration section for those extensions.
		These configuration sections can be defined inline or external (if the externaldefinition is used, all
		inline content is ignored!)
	-->
	<extensions>
		<ext:editorextensions>
			<ext:editorextension target="CME">
				<ext:editurls />
				<ext:listdefinitions />
				<ext:itemicons />
				<ext:taskbars />
				<ext:commands />
				<ext:commandextensions/>
				<ext:contextmenus >
					<ext:add>
						<ext:extension name="Rename_ContextMenu" assignid="beardcore_rename_cm" insertbefore="cm_clipboard_delete">
							<ext:menudeclaration>
								<!-- Add resources -->
								<cmenu:ContextMenuItem id="beardcore_cm_rename" name="Rename" command="BeardcoreRename"/>
							</ext:menudeclaration>
							<ext:dependencies>
								<cfg:dependency>UIBeardcore.Tools.Rename.ContextMenu</cfg:dependency>
							</ext:dependencies>
							<ext:apply>
								<ext:view name="DashboardView">
									<ext:control id="DashboardContextMenu" />
								</ext:view>
							</ext:apply>
						</ext:extension>
					</ext:add>
				</ext:contextmenus>
				<ext:lists/>
				<ext:xslstylesheetextensions />
				<ext:deckpages />
				<ext:tabpages />
				<ext:toolbars />
				<ext:ribbontoolbars>
					<ext:add>
						<!--<ext:extension pageid="HomePage" groupid="ManageItemsGroup2" name="{Resources: Tridion.TranslationManager.UI.Editor.Strings, Translate}" assignid="Translate" insertbeforegroup="" insertbefore="">-->
						<ext:extension pageid="HomePage" groupid="ManageGroup" name="Rename" assignid="BeardcoreRename" insertbeforegroup="" insertbefore="">
							<ext:command>BeardcoreRename</ext:command>
							<ext:title>Rename</ext:title>
							<ext:dependencies>
								<cfg:dependency>UIBeardcore.Tools.Rename.Toolbar</cfg:dependency>
							</ext:dependencies>
							<ext:apply>
								<ext:view name="DashboardView">
									<ext:control id="DashboardToolbar" />
								</ext:view>
							</ext:apply>
						</ext:extension>
					</ext:add>
				</ext:ribbontoolbars>
				<ext:extendedareas />
				<ext:optionspanels />
			</ext:editorextension>
		</ext:editorextensions>
		<ext:dataextenders />
		<ext:resourceextensions/>
	</extensions>

	<!--
		The SDL Tridion GUI uses a 'Command' pattern for the commands executed whenever a user
		interacts with the system.

		Below are all the available commands specified and the file that holds the actual implementation of that command.
	-->
	<commands>
		
		<cfg:commandset id="UIBeardcore.Tools.Rename.Core">
			
			<cfg:command name="BeardcoreRename" implementation="UIBeardcore.Tools.Commands.BeardcoreRename"/>
			
			<cfg:dependencies>
				<cfg:dependency>UIBeardcore.Tools.Rename.Commandset</cfg:dependency>
			</cfg:dependencies>
			
		</cfg:commandset>

	</commands>
	
	<contextmenus />
	
	<widgetsviews />
	
	<localization />

	<settings>
		<dependencies>
			<editor>CME</editor>
		</dependencies>
		<defaultpage/>
		<editurls/>
		<listdefinitions />
		<itemicons />
		<theme>
			<path>/Theme/</path>
		</theme>
		<resourceextensions/>
		<customconfiguration />
	</settings>

</Configuration>
